<%- include('./layout/header') %>
<%- include('./layout/navbar') %>
<%- include('./layout/category_navbar') %>

<style>
.Orders {
    max-width: 800px;
    margin: 0 auto; 
    padding: 20px;
}

.order-card {
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 20px;
    margin: 10px 0;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.product-details {
    display: flex;
    align-items: center; /* Align items vertically in the center */
    margin-bottom: 10px; /* Spacing between each product */
}

.product-image {
    flex-shrink: 0; /* Prevents image from shrinking */
    margin-right: 20px; /* Spacing between image and details */
}

.product-image img {
    max-width: 100px; 
    height: auto;
    border-radius: 4px;
}

.product-info {
    flex-grow: 1; /* Takes up available space next to the image */
    margin-right: 20px; /* Space between details and buttons */
}

.product-info p {
    margin: 5px 0;
    color: #555;
}

.order-actions {
    display: flex;
    flex-direction: column;
    align-items: flex-start; 
}

.order-actions button {
    margin-top: 5px;
    font-size: 0.9em;
    padding: 5px 10px;
    color: white;
    background-color: #d10e21;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s;
}

.order-actions button:hover {
    background-color: #c82333;
}

.return-order {
    background-color: #28a745; 
}

.return-order:hover {
    background-color: #218838;
}

</style>

<div class="breadcrumbs mb-4">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="/profile" style="text-decoration:none">Your Account</a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">Your Orders</li>
    </ol>
</div>
<h4>Order History</h4>

<div class="Orders">
    <% if (orders.length === 0) { %>
        <p>You have no previous orders.</p>
    <% } else { %>
        <% orders.forEach(order => { %>
            <div class="order-card">
                <div class="order-details">
                    <p><strong>Order ID:</strong> <%= order._id %></p>
                    <p><strong>Order Date:</strong> <%= order.createdAt.toDateString() %></p>
                    <p><strong>Total Amount:</strong> Rs <%= order.totalAmount.toFixed(2) %></p>
                    <p><strong>Payment Method:</strong> <%=order.paymentMethod   %></p>
                    <p><strong>Order status : </strong><%= order.status  %></p>
                    <h4>Items in this order:</h4>
                    
                    <% order.items.forEach(item => { %>
                        <div class="product-details">
                            <div class="product-image">
                                <img src="<%= item.productImage %>" alt="Product Image">
                            </div>
                            <div class="product-info">
                                <p><strong>Product Name:</strong> <%= item.productName %></p>
                                <p><strong>Price:</strong> Rs<%= item.productPrice %></p>
                                <p><strong>Quantity:</strong> <%= item.quantity %></p>
                                <p><strong>Status:</strong> <%= item.status %></p>
                            </div>
                            <div class="order-actions">
                                <% if(item.status !== 'Cancelled' && item.status !== 'Delivered' && item.status !== 'Rejected' && item.status !== 'Return Under Process' && item.status !== 'Returned'){ %>
                                    <form action="/cancelOrder/<%= order._id %>/<%= item.productId %>" method="POST" style="display:inline;">
                                        <button type="submit" class="cancel-order">Cancel Product</button>
                                    </form>
                                <% } %>

                                <% if(item.status === 'Return Under Process') { %>
                                    <strong>Waiting for Retrun Approval from the seller.</strong>
                                    <% } %>

                                    <% if(item.status === 'Rejected'){ %>
                                        <strong>The item cannot be be returned. </strong>
                                    <% } %>

                                <% if(item.status === 'Delivered' && item.status !== 'Returned'){ %>
                                    <% if (!item.returnWindowClosed) { %>
                                    <form action="/returnOrder/<%= order._id %>/<%= item.productId %>" method="POST" style="display:inline;">
                                        <button type="button" class="return-order btn btn-warning me-2" data-bs-toggle="modal" data-bs-target="#returnProductModal" 
                                        onclick="setReturnData('<%= order._id %>', '<%= item.productId %>')">
                                        Return Product
                                    </button>
                                    </form>

                                    <span>Return window open till <%= order.formattedReturnDate %></span>
                                    <% } else { %>
                                    <span>Return window closed on: <%= order.formattedReturnDate %></span>
                                    <% } %>
                                <% } %>
                            </div>
                        </div>
                    <% }) %>
                    
                    <a class="btn" href="/orderConfirmed/<%= order._id %>">Order Details</a>
                </div>
            </div>
        <% }) %>
    <% } %>
    <a class="btn" href="/all-products">Continue Shopping</a>
</div>

//Return modal form
<div class="modal fade" id="returnProductModal" tabindex="-1" aria-labelledby="returnProductModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="returnProductModalLabel">Return Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to return this product?</p>
                <label for="returnReason" class="form-label">Reason for Return</label>
                <select class="form-select" id="returnReason">
                    <option selected>Select a reason</option>
                    <option value="Damaged Product">Damaged Product</option>
                    <option value="Wrong Item Delivered">Wrong Item Delivered</option>
                    <option value="Quality Issues">Quality Issues</option>
                    <option value="No Longer Needed">No Longer Needed</option>
                </select>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmReturnButton" onclick="submitReturnForm()">Confirm Return</button>
            </div>
        </div>
    </div>
</div>

<script>

let returnOrderId = '';
let returnProductId = '';

function setReturnData(orderId, productId) {
    returnOrderId = orderId;
    returnProductId = productId;
}

function submitReturnForm() {
    const returnReason = document.getElementById('returnReason').value;

    // Check if the user has selected a valid reason for return
    if (returnReason === 'Select a reason') {
        Swal.fire({
            title: "Select a Reason!",
            text: "Please select a reason for returning the product.",
            icon: "warning",
            confirmButtonText: "OK"
        });
        return;
    }

    fetch(`/returnOrder/${returnOrderId}/${returnProductId}`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ returnReason: returnReason })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            Swal.fire({
                title: "Return Submitted!",
                text: data.message,
                icon: "success",
                confirmButtonText: "OK"
            }).then(() => {
                window.location.reload();  
            });
        } else {
            Swal.fire({
                title: "Error",
                text: data.message,
                icon: "error",
                confirmButtonText: "OK"
            });
        }
    })
    .catch(error => {
        console.error('Error:', error);
        // Swal.fire({
        //     title: "Error",
        //     text: "Something went wrong. Please try again later.",
        //     icon: "error",
        //     confirmButtonText: "OK"
        // });
    });
}




    
    document.querySelectorAll('.productImage').forEach(function(image) {
    image.addEventListener('click', function(){
        const productId = this.getAttribute('data-product-id')
        window.location.href = '/productDetails/' + productId 
    })
})
    document.querySelectorAll('.cancel-order').forEach(button => {
        button.addEventListener('click', function(e) {
            e.preventDefault();
            const form = this.closest('form');
            const actionUrl = form.action;

            Swal.fire({
                title: 'Are you sure?',
                text: 'You wonâ€™t be able to revert this!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, cancel it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(actionUrl, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                    icon: 'success',
                                    title: 'Order Cancelled',
                                    text: data.message,
                                }).then(() => {
                                window.location.reload();
                            });
                        } else {
                            Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: data.message,
                                })
                        }
                    })
                    .catch(error => {
                        Swal.fire('Error!', 'Failed to cancel the order. Please try again.', 'error');
                    });
                }
            });
        });
    });

</script>