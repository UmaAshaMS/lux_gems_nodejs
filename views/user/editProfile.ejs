<%- include('./layout/header') %>
    <%- include('./layout/navbar') %>
        <%- include('./layout/category_navbar') %>

<style>
    .form-container {
    display: flex;
    flex-direction: column;
    align-items: center; 
    justify-content: center; 
    margin: 0 auto; 
    max-width: 600px; 
    padding: 20px; 
    border: 1px solid #ccc;
    border-radius: 8px; 
    background-color: #f9f9f9; 
}

.form-group {
    width: 100%; 
    margin-bottom: 15px; 
}

.password-container {
    display: flex;
    align-items: center;
}

.password-container input {
    flex: 1;
    margin-right: 5px;
}

.password-container .toggle-password {
    background: none;
    border: none;
    cursor: pointer;
    font-size: 16px; /* Adjust size if needed */
}
.breadcrumbs {
        font-size: 16px;
        margin-bottom: 20px;
        color: #555;
    }

    .breadcrumb-item a {
        color: #007bff;
        text-decoration: none;
    }

</style>
<div class="breadcrumbs mb-4">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="/profile" style="text-decoration:none">Your Account</a></li>

        <li class="breadcrumb-item active" aria-current="page">Edit Your Profile</li>
    </ol>
</div>
        <!-- Form Section -->
    <div class="form-container">
        <h2>Edit User Information</h2>
        <form method="POST"  autocomplete="off" id="editProfileForm">
            <div class="form-group full">
                <label for="fullName">Full Name:</label>
                <input type="text" id="fullName" name="fullName" value="<%= user ? user.name : '' %>" autocomplete="off">
            </div>
            <div class="form-group half">
                <label for="phoneNumber">Phone Number:</label>
                <input type="text" id="phoneNumber" name="phoneNumber" value="<%= user ? user.phoneNumber : '' %>" autocomplete="off">
            </div>
            <div class="form-group half">
                <label for="email">Email ID:</label>
                <input type="text" id="email" name="email" value="<%= user ? user.email : '' %>" readonly >
            </div>
            <div class="form-group full">
                <label for="password">Current Password:</label>
                <div class="password-container">
                <input type="password" id="currentPassword" name="currentPassword" autocomplete="drowssap-12345">
                <button type="button" class="toggle-password" onclick="togglePassword('currentPassword')">
                    <i class="fas fa-eye" id="toggleCurrentPassword"></i></button>
                </div>
            </div>
            <div class="form-group full">
                <label for="password">New Password:</label>
                <div class="password-container">
                <input type="password" id="newPassword" name="newPassword"  autocomplete="new-password">
                <button type="button" class="toggle-password" onclick="togglePassword('newPassword')">
                    <i class="fas fa-eye" id="toggleCurrentPassword"></i></button>
                    </div>
            </div>
            <div class="form-group full">
                <label for="password">Confirm Password:</label>
                <div class="password-container">
                <input type="password" id="confirmPassword" name="confirmPassword"  autocomplete="new-password">
                <button type="button" class="toggle-password" onclick="togglePassword('confirmPassword')">
                    <i class="fas fa-eye" id="toggleCurrentPassword"></i></button>
                </div>
            </div>
            <button class="btn" type="submit" onclick="editProfileForm(event)"> Save Changes</button>
        </form>
        

<script>
   async function editProfileForm(event) {
    event.preventDefault(); // Prevent default form submission

    // Form field values
    const fullName = document.getElementById('fullName').value.trim();
    const phoneNumber = document.getElementById('phoneNumber').value.trim();
    const currentPassword = document.getElementById('currentPassword').value.trim();
    const newPassword = document.getElementById('newPassword').value.trim();
    const confirmPassword = document.getElementById('confirmPassword').value.trim();

    // Initialize validation state
    let isValid = true;
    let errorMessage = '';

    // Validation logic
    const nameRegex = /^[A-Za-z\s]+$/;
    if (!fullName || !nameRegex.test(fullName)) {
        isValid = false;
        errorMessage += 'Full Name must only contain letters.\n';
    }

    const phoneRegex = /^\d{10}$/;
    if (!phoneNumber || !phoneRegex.test(phoneNumber)) {
        isValid = false;
        errorMessage += 'Phone number must be 10 digits.\n';
    }

    if (newPassword) {
        if (newPassword.length < 6) {
            isValid = false;
            errorMessage += 'New Password must be at least 6 characters long.\n';
        }
        if (newPassword !== confirmPassword) {
            isValid = false;
            errorMessage += 'New Password and Confirm Password do not match.\n';
        }
    }

    console.log(`Validating: Full Name = ${fullName}, Phone = ${phoneNumber}, New Password = ${newPassword}, Confirm Password = ${confirmPassword}`);
    console.log(`Is form valid? ${isValid}`);

    // Show error message if validation fails
    if (!isValid) {
        Swal.fire({
            icon: 'error',
            title: 'Validation Error!',
            text: errorMessage,
            confirmButtonText: 'Try Again'
        });
        return; // Stop form submission
    }

    // Prepare form data for submission

    const formData = {
        fullName,
        phoneNumber,
        currentPassword,
        newPassword,
        confirmPassword
    };
    console.log(formData)

    // Send data to server
    try {
        const response = await fetch('/editProfilePost', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        });

        const data = await response.json();

    if (data.success) {
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: data.message,
                confirmButtonText: 'OK'
            }).then(() => {
                if (data.redirect) {
                    window.location.href = data.redirect; // Redirect to profile or specified page
                }
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Error!',
                text: data.message,
                confirmButtonText: 'Try Again'
            });
        }
    } catch (error) {
        console.error('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error!',
            text: 'An unexpected error occurred. Please try again later.',
            confirmButtonText: 'OK'
        });
    }
}



    

// Move togglePassword function outside
function togglePassword(passwordFieldId) {
    const passwordField = document.getElementById(passwordFieldId);
    const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
    passwordField.setAttribute('type', type);
}
             
</script>