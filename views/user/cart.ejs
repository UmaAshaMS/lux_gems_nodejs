<%- include('./layout/header') %>
<%- include('./layout/navbar') %>
<%- include('./layout/category_navbar') %>

<style>
    body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 20px;
        background-color: #f4f4f4;
    }
    .cart-container {
        max-width: 800px;
        margin: 0 auto;
        margin-top: 3%;
        background: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }
    h1 {
        text-align: center;
        margin-bottom: 20px;
    }
    table {
        width: 100%;
        border-collapse: collapse;
    }
    table th, table td {
        padding: 10px;
        border: 1px solid #ddd;
        text-align: center;
    }
    table th {
        background-color: #f8f8f8;
    }
    .cart-actions {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
    }
    .cart-actions button {
        padding: 10px 15px;
        border: none;
        background-color: #007bff;
        color: white;
        cursor: pointer;
        border-radius: 4px;
        transition: background-color 0.3s;
    }
    .cart-actions button:hover {
        background-color: #0056b3;
    }
    .remove-btn {
        background-color: #dc3545;
        margin-left: 5px;
    }
    .remove-btn:hover {
        background-color: #c82333;
    }
    .saveLater-btn {
        background-color: #dccc1f;
        margin-left: 5px;
    }
    .saveLater-btn:hover {
        background-color: #dccc1f;
    }
    button {
        background-color: white;
    }
    .product-image {
    width: 100px; /* Adjust as needed */
    height: auto; /* Maintain aspect ratio */
    border-radius: 4px; /* Optional */
}
.table {
            border-collapse: collapse;
        }

        /* Remove all borders */
        table, th, td {
            border: none;
        }

        /* Only horizontal lines */
        th, td {
            border-bottom: 1px solid #dee2e6;
        }

        /* Optional: To remove padding for a compact look */
        th, td {
            padding: 8px;
        }
</style>

<body>
    <div class="cart-container">
        <h1>Your Shopping Cart</h1>
        <table class="table">
            <thead>
                <tr>
                    <th>Product</th>
                    <th>Product Name</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <% if (cart && cart.product.length > 0) { %>
                    <% cart.product.forEach(item => { %>
                        <tr>
                            <td>
                                <img src="<%= item.productId.productImage[0].replace(/\\/g, '/') %>" alt="img" class="product-image">
                                
                            </td>
                            <td>    
                                <%= item.productId.productName %>
                            </td>
                            <td>
                                <button onclick="updateQuantity('<%= item.productId._id %>', -1)">-</button>
                                <%= item.quantity %>
                                <button onclick="updateQuantity('<%= item.productId._id %>', 1)">+</button>
                            </td>
                            <td><i class="fas fa-rupee-sign"></i><%= item.price.toFixed(2) %></td>
                            <td>
                                <button onclick="removeFromCart('<%= item.productId._id %>')">
                                    <i class="fas fa-trash-alt"></i>
                                </button>
                                <!-- <button class="saveLater-btn rounded-pill" onclick="saveForLater('<%= item.productId._id %>')">Save for Later</button> -->
                            </td>
                        </tr>
                    <% }) %>
                <% } else { %>
                    <tr>
                        <td colspan="4">Your cart is empty.</td>
                    </tr>
                <% } %>
            </tbody>
        </table>
        <div class="cart-actions">
            <button onclick="checkout()">Proceed to Checkout</button>
        </div>
    </div>

    <script>

        // Function to update the quantity of a product
        function updateQuantity(productId, change) {
            fetch(`/user/cart/update/${productId}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ change })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    window.location.reload();
                } else {
                    Swal.fire({
                        title: 'Error',
                        icon: 'error',
                        text: data.message || 'Failed to update product quantity.',
                        confirmButtonText: 'OK'
                    });
                }
            })
            .catch(error => console.error('Error updating cart:', error));
        }

        // Function to remove a product from the cart
function removeFromCart(productId) {
    console.log("Remove button clicked for product ID:", productId);

    // Show confirmation dialog
    Swal.fire({
        title: 'Are you sure?',
        text: "Do you really want to delete this item from the cart?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!',
        cancelButtonText: 'No, cancel'
    }).then((result) => {
        if (result.isConfirmed) {
            // User confirmed deletion
            fetch(`/user/cart/remove/${productId}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' }
            })
            .then(response => response.json().then(data => ({ data, status: response.status })))
            .then(({ data, status }) => {
                if (status === 200) {
                    Swal.fire({
                        title: 'Success',
                        icon: 'success',
                        text: data.message,
                        confirmButtonText: 'OK'
                    }).then(() => {
                        window.location.href = '/user/cart';
                    });
                } else {
                    Swal.fire({
                        title: 'Error',
                        icon: 'error',
                        text: data.message || 'Failed to remove product from cart.',
                        confirmButtonText: 'OK'
                    });
                }
            })
            .catch((error) => {
                console.error('Error removing product from cart:', error);
            });
        } 
    });
}

        // Function to proceed to checkout
        function checkout() {
            window.location.href = '/user/checkout';
        }
    </script>
</body>
</html>
