<%- include('./layout/header') %>
    <%- include('./layout/navbar') %>
        <%- include('./layout/category_navbar') %>

            <div class="breadcrumbs mb-4">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href="/profile" style="text-decoration:none">Your Account</a>
                    </li>
                    <li class="breadcrumb-item active" aria-current="page">Your Address</li>
                </ol>
            </div>
            <h4>Your Addresses</h4>
            <div class="add-address  text-center mb-4">

                <button type="button" class="btn" data-bs-toggle="modal" data-bs-target="#addAddressModal">
                    <i class="fas fa-plus-square"></i> Add New Address
                </button>
            </div>



            <!-- Modal for adding new address -->
            <div class="modal fade" id="addAddressModal" tabindex="-1" role="dialog"
                aria-labelledby="addAddressModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="addAddressModalLabel">Add New Address</h5>
                            <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <form id="addAddressForm" onsubmit="return addAddress(event)">
                                <div class="form-group">
                                    <label for="fullName">Full Name:</label>
                                    <input type="text" class="form-control" id="fullName" name="fullName" required>
                                </div>
                                <div class="form-group">
                                    <label for="phoneNumber">Phone Number:</label>
                                    <input type="text" class="form-control" id="phoneNumber" name="phoneNumber"
                                        required>
                                </div>
                                <div class="form-group">
                                    <label for="email">Email ID:</label>
                                    <input type="email" class="form-control" id="email" name="email" required>
                                </div>
                                <div class="form-group">
                                    <label for="addressLine1">Address Line 1:</label>
                                    <input type="text" class="form-control" id="addressLine1" name="addressLine1"
                                        required>
                                </div>
                                <div class="form-group">
                                    <label for="addressLine2">Address Line 2:</label>
                                    <input type="text" class="form-control" id="addressLine2" name="addressLine2">
                                </div>
                                <div class="row">
                                    <div class="form-group col-md-6">
                                        <label for="city">City:</label>
                                        <input type="text" class="form-control" id="city" name="city" required>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label for="pincode">PINCODE:</label>
                                        <input type="text" class="form-control" id="pincode" name="pincode" required>
                                    </div>
                                </div>
                                <div class="row">

                                    <div class="form-group col-md-6">
                                        <label for="state">State:</label>
                                        <select class="form-control" id="state" name="state" required>
                                            <option value="" disabled selected>Select your state</option>
                                            <option value="Kerala">Kerala</option>
                                            <option value="Tamil Nadu">Tamil Nadu</option>
                                            <option value="Karnataka">Karnataka</option>
                                        </select>
                                    </div>

                                    <div class="form-group col-md-6">
                                        <label for="country">Country:</label>
                                        <select class="form-control" id="country" name="country" required>
                                            <option value="" disabled selected>Select your country</option>
                                            <option value="India"> India</option>

                                        </select>
                                    </div>
                                </div>


                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary" form="addAddressForm">Save</button>
                        </div>
                        </form>
                    </div>
                </div>
            </div>



            <!-- a loop for showing multiple addresess -->
            <div class="container my-5">
                <div class="row">
                    <!-- Loop through each address -->
                    <% if(address!==null) { address.forEach((address, index)=> { %>
                        <div class="col-md-4 d-flex">
                            <div class="card address-card flex-fill">
                                <div class="card-body">
                                    <h5 class="address-card-title">Address <%= index + 1 %>
                                    </h5>
                                    <p class="address-card-text"><strong>
                                            <%= address.fullName %>
                                        </strong></p>
                                    <p class="address-card-text">
                                        <%= address.phoneNumber %><br>
                                            <%= address.email %><br>
                                                <%= address.addressLine1 %>, <%= address.addressLine2 %><br>
                                                        <%= address.city %> - <%= address.pincode %><br>
                                                                <%= address.state %>, <%= address.country %>
                                    </p>
                                    <div class="d-flex justify-content-between">
                                        <a class="address-card-link text-primary" style="cursor:pointer"  
                                        href="/editAddress/<%= index %>">
                                        <i class="fas fa-edit"></i>
                                            Edit</a>
                                        <a class="address-card-link text-danger" style="cursor:pointer"
                                            onclick="deleteAddress(`<%= index %>`)" data-index="<%= index %>"><i
                                                class="fas fa-trash-alt"></i> Delete</a>
                                        <a class="address-card-link text-success" style="cursor:pointer" onclick="setAsDefault('<%= index %>')"><i
                                                class="fas fa-check"></i>
                                            Set as Default</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <% }); } %>
                </div>
            </div>


            <script>
                document.getElementById('addAddressForm').addEventListener(submit,(e) => {
                    e.preventDefault();
                
                let validate = true;
                let errorMessage = "";
                
                const fullName = getElementById('fullName').value
                const phoneNumber = getElementById('phoneNumber').value
                const email = getElementById('email').value
                const addressLine1 = getElementById('addressLine1').value
                const addressLine2 = getElementById('addressLine2').value
                const city = getElementById('city').value
                const pincode = getElementById('pincode').value
                const state = getElementById('state')
                const country = getElementById('country')
                if(!fullName || fullName === 0){

                }
                })
                //Function to add address
                function addAddress(event) {
                    event.preventDefault()

                    // Collect data from form
                    const form = document.getElementById('addAddressForm');
                    const formData = new FormData(form);
                    const data = {
                        fullName: formData.get('fullName'),
                        phoneNumber: formData.get('phoneNumber'),
                        email: formData.get('email'),
                        addressLine1: formData.get('addressLine1'),
                        addressLine2: formData.get('addressLine2'),
                        city: formData.get('city'),
                        pincode: formData.get('pincode'),
                        state: formData.get('state'),
                        country: formData.get('country')
                    };

                    const URL = `/addAddress`;
                    fetch(URL, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(data)
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.message === 'Address added successfully') {
                                Swal.fire({
                                    title: 'Success!',
                                    text: 'Address added successfully!',
                                    icon: 'success',
                                    confirmButtonText: 'OK'
                                }).then(() => {
                                    window.location.reload(); // Reload the page to reflect new address
                                });
                            }
                            else {
                                Swal.fire({
                                    title: 'Error!',
                                    text: data.message,
                                    icon: 'error',
                                    confirmButtonText: 'OK',
                                    
                                });
                            }
                        })
                        .catch(error => {
                            console.error('Error adding address:', error);
                        });
                }


                //function to delete address
                function deleteAddress(index) {
                    console.log('Address index received:', index);

                    Swal.fire({
                        title: 'Are you sure?',
                        text: "Do you want to delete this address?",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, delete it!',
                        cancelButtonText: 'Cancel'
                    }).then((result) => {
                        if (result.isConfirmed) {

                            const URL = `/deleteAddress/${index}`;
                            fetch(URL, {
                                method: 'DELETE',
                                headers: {
                                    'Content-Type': 'application/json'
                                }
                            })
                                .then(response => {
                                    if (response.ok) {
                                        Swal.fire({
                                            title: 'Success!',
                                        text: 'Address deleted successfully!',
                                        icon: 'success',
                                        confirmButtonText: 'OK'
                                        })
                                        window.location.reload(); // Refresh the page to reflect changes
                                    } else {
                                        Swal.fire({
                                        title: 'Error!',
                                        text: 'Address deletion failed!',
                                        icon: 'error',
                                        confirmButtonText: 'OK'
                                        })
                                        ;
                                    }
                                })
                                .catch(err => {
                                    console.error("Error during address deletion:", err);
                                    // alert("An error occurred while deleting the address.");
                                });
                        }
                    }
                    )
                }

                async function setAsDefault(index) {
    try {
        const response = await fetch(`/setDefaultAddress/${index}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ index })
        });

        if (response.ok) {
            const result = await response.json();
            Swal.fire({
                title: 'Sucess!',
                text: 'Address set as default!',
                icon: 'success',
                confirmButtonText: 'OK',

            })
            // window.location.reload();
        } else {
            alert('Failed to set default address.');
        }
    } catch (error) {
        console.error('Error setting default address:', error);
    }
}


            </script>