<!-- <body>
    <style>
        .Container {
            display: flex;
            flex: 1;
            flex-direction: row;
            border-radius: 10px;
            gap: 10px
        }


        .SideBar .btn {
            display: block;
            /* Make buttons stack vertically */
            width: 150px;
            margin-bottom: 10px;
            /* Space between buttons */
            text-align: center;
        }



        .SideBar {
            width: 250px;
            margin: 20px;
            background-color: #caaf7a;
            color: white;
            height: 70vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align: center;
            border-radius: 10px;

        }

        .SideBar a {
            text-decoration: none;
            color: inherit
        }

        .Customer-Page {
            display: flex;
            flex-direction: column;
        }

        .Customer-container {
            display: flex;
            flex-direction: row;
            flex: 1;
            margin-left: 0px;
            padding: 20px;
            /* Arrange children side by side */
            gap: 10px;
            /* Space between sidebar and table */

        }

        .Customer-container table {

            text-align: center;
            flex-direction: column;

        }

        .btn {
            width: 100px;
        }

        .searchUser {
            display: flex;
            flex-direction: row;
            border: 1px;
            border-radius: 4px;
            gap: 10px;
            width: 800px
        }

        .Search form {
            display: flex;
        }

        .form-control {
            width: 500px;
            margin-left: 90px;
        }

        .searchBtn {
            flex: 2;
            width: 10px;
            color: white;
            border: 2px;
            flex-shrink: 0;
            /* Prevent the button from shrinking */

        }

        .table {
            margin-top: 0%;
            width: 1000px;
            height: auto;
            border: black;
            text-align: center;
            align-self: center;
        }

        .AdminDashboard {
            flex: 1;
            justify-content: center;
            align-items: center;
            align-self: center;
            margin-left: 50px;
        }

        .AdminDashboard img {
            width: 1000px;
            height: 600px;
            align-self: center;
        }

        .stats-container {
            display: flex;
            justify-content: space-between;
            
            align-items: flex-start;
            gap: 20px;
            margin: 20px 0;
           
            flex-wrap: wrap;
           
        }

        .card {
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 20px;
            text-align: center;
            width: 250px;
            transition: transform 0.3s;
            width: 300px;
            height: 150px
        }

        .card:hover {
            transform: translateY(-5px);
        }

        .card-body {
            padding: 10px;
        }

        .card h3 {
            margin: 0;
            font-size: 1.5em;
            color: #333;
        }

        .card-value {
            margin-top: 10px;
            font-size: 2em;
            font-weight: bold;
            color: #d89013;
        }

        #salesChart {
    width: 700px;  /* Maximum width of the chart */
    height : 100px;
    margin: 10px auto; /* Center the chart */
}
.chart-container {
    width: 300px; /* Adjust width as needed */
    height: 300px; /* Adjust height as needed */
    margin: 20px auto; /* Center the chart */
}

#paymentChart {
    width: 100% !important; /* Make it responsive within container */
    height: 100% !important;
}

    </style>

    <%-include('navbar.ejs') %>
        <div class="Container">
            <div class='SideBar'>
                <a href="/admin/home"><button class="btn btn-dark"> Dashboard</button></a>
                <a href="/admin/salesReport"><button class="btn btn-dark"> Sales Report</button></a>
                <a href="/admin/Category"><button class="btn btn-dark"> Category</button></a>
                <a href="/admin/Products"><button class="btn btn-dark">Products</button></a>
                <a href="/admin/Customers"><button class="btn btn-dark">Customers</button></a>
                <a href="/admin/Orders"><button class="btn btn-dark">Order</button></a>
                <a href="/admin/Coupons"><button class="btn btn-dark">Coupons</button></a>
                <a href="/admin/Offers"><button class="btn btn-dark">Offers</button></a>
                <a href="/admin/trendingProducts"><button class="btn btn-dark">Trending</button></a>
                <form action="/admin/logout" method="POST">
                    <button type="submit" class="btn btn-dark">Logout</button>
                </form>
            </div>


            <div class="stats-container">
                <div class="card">
                    <div class="card-body">
                        <h3>Total Orders</h3>
                        <p class="card-value">
                            <%= totalOrders %>
                        </p>
                    </div>
                </div>

                <div class="card">
                    <div class="card-body">
                        <h3>Total Sales Amount</h3>
                        <p class="card-value">Rs: <%= overallOrderAmount %>
                        </p>
                    </div>
                </div>

                <div class="card">
                    <div class="card-body">
                        <h3>Total Discount</h3>
                        <p class="card-value">
                            <%= overallDiscount %>
                        </p>
                    </div>
                </div>
            </div>
        </div>

        <div class="chart-container">
            <h3 style="margin: auto;">Payment Methods Distribution</h3>
            <canvas id="paymentChart" width="250" height="250"></canvas>
        </div>

        <h2>Yearly Sales</h2>
        <canvas id="salesChart" width="300" height="200"></canvas>

        <h2>Monthly Sales</h2>
        <canvas id="monthlyChart" width="300" height="200"></canvas>

        <%-include('footer') %>
</body>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
const salesData = <%= JSON.stringify(salesData) %> ;
console.log(salesData)

const ctx = document.getElementById('salesChart').getContext('2d');
const salesChart = new Chart(ctx, {
    type: 'bar',
    data: {
        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
        datasets: [{
            label: 'Sales Amount',
            data: salesData, // Data from the server
            backgroundColor: 'rgba(0, 0, 0, 1)',
            borderColor: 'rgba(0, 0, 0, 1)',
            borderWidth: 1
        }]
    },
    options: {
        scales: {
            y: {
                beginAtZero: true,
                stepSize : 1000,
                ticks: {
                    callback: function(value) { return 'Rs' + value; } 
                }
            }
        }
    }
});


const distributionData = <%- JSON.stringify(distribution) %>;

    const paymentLabels = distributionData.map(item => item._id);
    const paymentValues = distributionData.map(item => item.count);
    const paymentColors = [
        'rgba(75, 192, 192, 0.6)',
        'rgba(54, 162, 235, 0.6)',
        'rgba(255, 99, 132, 0.6)',
        'rgba(255, 205, 86, 0.6)',
        'rgba(153, 102, 255, 0.6)',
    ];

    const paymentCtx = document.getElementById('paymentChart').getContext('2d');
    new Chart(paymentCtx, {
        type: 'pie',
        data: {
            labels: paymentLabels,
            datasets: [{
                label: 'Payment Method Distribution',
                data: paymentValues,
                backgroundColor: paymentColors,
                borderColor: paymentColors.map(color => color.replace('0.6', '1')),
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'top',
                },
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            const total = paymentValues.reduce((a, b) => a + b, 0);
                            const percentage = ((context.raw / total) * 100).toFixed(2);
                            return `${context.label}: ${context.raw} (${percentage}%)`;
                        }
                    }
                }
            }
        }
    });



</script> -->
<body>
    <style>
        /* General page styling */
        body {
            font-family: Arial, sans-serif;
            background-color: #f5f5f5;
            color: #333;
            margin: 0;
            padding: 0;
        }

        .Container {
            display: flex;
            gap: 20px;
            margin: 20px;
        }

        /* Sidebar styling */
        .SideBar {
            width: 220px;
            height:fit-content;
            background-color: #333;
            color: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .SideBar .btn {
            display: block;
            width: 100%;
            max-width: 180px;
            margin: 10px auto;
            padding: 10px;
            text-align: center;
            background-color: #444;
            color: #caaf7a;
            border: none;
            border-radius: 5px;
            transition: background-color 0.3s;
        }

        .SideBar .btn:hover {
            background-color: #555;
        }

        .SideBar a {
            text-decoration: none;
            color: inherit;
        }

        /* Stats container styling */
        .stats-container {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            flex: 1;
            padding: 20px;
        }

        .card {
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 20px;
            text-align: center;
            width: 250px;
            height: 150px;
            transition: transform 0.3s, box-shadow 0.3s;
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
        }

        .card h3 {
            font-size: 1.2em;
            color: #666;
            margin-bottom: 10px;
        }

        .card-value {
            font-size: 1.8em;
            font-weight: bold;
            color: #d89013;
        }

        /* Chart container styling */
        .chart-container {
            width: 700px;
            max-width: 100%;
            margin: 20px auto;
            background-color: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            text-align: center;
        }

         #paymentChart {
            max-width: 90%;
            height: auto;
            margin: 0 auto;
        }


        h2, h3 {
            color: #444;
            margin-bottom: 20px;
        }
    </style>

    <%-include('navbar.ejs') %>

    <div class="Container">
        <div class='SideBar'>
            <a href="/admin/home"><button class="btn">Dashboard</button></a>
            <a href="/admin/salesReport"><button class="btn">Sales Report</button></a>
            <a href="/admin/Category"><button class="btn">Category</button></a>
            <a href="/admin/Products"><button class="btn">Products</button></a>
            <a href="/admin/Customers"><button class="btn">Customers</button></a>
            <a href="/admin/Orders"><button class="btn">Order</button></a>
            <a href="/admin/Coupons"><button class="btn">Coupons</button></a>
            <a href="/admin/Offers"><button class="btn">Offers</button></a>
            <a href="/admin/trendingProducts"><button class="btn">Trending</button></a>
            <form action="/admin/logout" method="POST">
                <button type="submit" class="btn">Logout</button>
            </form>
        </div>

        <div class="stats-container">
            <div class="card">
                <h3>Total Orders</h3>
                <p class="card-value"><%= totalOrders %></p>
            </div>

            <div class="card">
                <h3>Total Sales Amount</h3>
                <p class="card-value">Rs: <%= overallOrderAmount %></p>
            </div>

            <div class="card">
                <h3>Total Discount</h3>
                <p class="card-value"><%= overallDiscount %></p>
            </div>
            <div class="card">
                <h3>Pending Orders</h3>
                <p class="card-value"><%= pendingOrdersCount  %></p>
            </div>

            <div class="chart-container1">
                <h3>Payment Methods Distribution</h3>
                <canvas id="paymentChart"></canvas>
            </div>

            <div class="chart-container">
                <h2>Annual Revenue</h2>
                <canvas id="salesChart"></canvas>
            </div>

            <div class="activities">
                <h2>   Recent Activities / Updates</h2>
                <canvas id="paymentChart"></canvas>
            </div>

            <div class="chart-container">
                <h2>Monthly Sales</h2>
                <canvas id="monthlyChart"></canvas>
            </div>
        
        </div>
    </div>

    

    

    
    

    <%-include('footer') %>
</body>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    // Sales Chart Configuration
    const salesData = <%= JSON.stringify(salesData) %>;
    const ctx = document.getElementById('salesChart').getContext('2d');
    new Chart(ctx, {
        type: 'bar',
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
            datasets: [{
                label: 'Sales Amount',
                data: salesData,
                backgroundColor: 'rgba(0, 0, 0, 1)',
                borderColor: 'rgba(0, 0, 0, 0.1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        callback: value => `Rs ${value}`
                    }
                }
            }
        }
    });

    // Payment Distribution Chart Configuration
    const distributionData = <%- JSON.stringify(distribution) %>;
    const paymentLabels = distributionData.map(item => item.method);
    const paymentValues = distributionData.map(item => item.count);
    const paymentCtx = document.getElementById('paymentChart').getContext('2d');
    new Chart(paymentCtx, {
        type: 'pie',
        data: {
            labels: paymentLabels,
            datasets: [{
                data: paymentValues,
                backgroundColor: ['rgba(75, 192, 192, 1)', 'rgba(255, 99, 132, 0.7)', 'rgba(54, 162, 235, 0.7)'],
                borderColor: ['rgba(75, 192, 192, 1)', 'rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)'],
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: { position: 'top' },
                tooltip: {
                    callbacks: {
                        label: context => {
                            const total = paymentValues.reduce((a, b) => a + b, 0);
                            const percentage = ((context.raw / total) * 100).toFixed(2);
                            return `${context.label}: ${context.raw} (${percentage}%)`;
                        }
                    }
                }
            }
        }
    });
</script>
