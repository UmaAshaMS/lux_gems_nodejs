<body>
    <style>
        .Container {
            display: flex;
            flex: 1;
            flex-direction: row;
            border-radius: 10px;
            gap: 10px
        }


        .SideBar .btn {
            display: block;
            /* Make buttons stack vertically */
            width: 150px;
            margin-bottom: 10px;
            /* Space between buttons */
            text-align: center;
        }



        .SideBar {
            width: 250px;
            margin: 20px;
            background-color: #caaf7a;
            color: white;
            height: 70vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align: center;
            border-radius: 10px;

        }

        .SideBar a {
            text-decoration: none;
            color: inherit
        }

        .Customer-Page {
            display: flex;
            flex-direction: column;
        }

        .Customer-container {
            display: flex;
            flex-direction: row;
            flex: 1;
            margin-left: 0px;
            padding: 20px;
            /* Arrange children side by side */
            gap: 10px;
            /* Space between sidebar and table */

        }

        .Customer-container table {

            text-align: center;
            flex-direction: column;

        }

        .btn {
            width: 100px;
        }

        .searchUser {
            display: flex;
            flex-direction: row;
            border: 1px;
            border-radius: 4px;
            gap: 10px;
            width: 800px
        }

        .Search form {
            display: flex;
        }

        .form-control {
            width: 500px;
            margin-left: 90px;
        }

        .searchBtn {
            flex: 2;
            width: 10px;
            color: white;
            border: 2px;
            flex-shrink: 0;
            /* Prevent the button from shrinking */

        }

        .table {
            margin-top: 0%;
            width: 1000px;
            height: auto;
            border: black;
            text-align: center;
            align-self: center;
        }

        .AdminDashboard {
            flex: 1;
            justify-content: center;
            align-items: center;
            align-self: center;
            margin-left: 50px;
        }

        .AdminDashboard img {
            width: 1000px;
            height: 600px;
            align-self: center;
        }

        .stats-container {
            display: flex;
            justify-content: space-between;
            
            align-items: flex-start;
            gap: 20px;
            margin: 20px 0;
           
            flex-wrap: wrap;
           
        }

        .card {
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 20px;
            text-align: center;
            width: 250px;
            transition: transform 0.3s;
            width: 300px;
            height: 150px
        }

        .card:hover {
            transform: translateY(-5px);
        }

        .card-body {
            padding: 10px;
        }

        .card h3 {
            margin: 0;
            font-size: 1.5em;
            color: #333;
        }

        .card-value {
            margin-top: 10px;
            font-size: 2em;
            font-weight: bold;
            color: #d89013;
        }
    </style>

    <%-include('navbar.ejs') %>
        <div class="Container">
            <div class='SideBar'>
                <a href="/admin/home"><button class="btn btn-dark"> Dashboard</button></a>
                <a href="/admin/salesReport"><button class="btn btn-dark"> Sales Report</button></a>
                <a href="/admin/Category"><button class="btn btn-dark"> Category</button></a>
                <a href="/admin/Products"><button class="btn btn-dark">Products</button></a>
                <a href="/admin/Customers"><button class="btn btn-dark">Customers</button></a>
                <a href="/admin/Orders"><button class="btn btn-dark">Order</button></a>
                <a href="/admin/Coupons"><button class="btn btn-dark">Coupons</button></a>
                <a href="/admin/Offers"><button class="btn btn-dark">Offers</button></a>
                <a href="/admin/trendingProducts"><button class="btn btn-dark">Trending</button></a>
                <form action="/admin/logout" method="POST">
                    <button type="submit" class="btn btn-dark">Logout</button>
                </form>
            </div>


            <div class="stats-container">
                <div class="card">
                    <div class="card-body">
                        <h3>Total Orders</h3>
                        <p class="card-value">
                            <%= totalOrders %>
                        </p>
                    </div>
                </div>

                <div class="card">
                    <div class="card-body">
                        <h3>Total Sales Amount</h3>
                        <p class="card-value">Rs: <%= overallOrderAmount %>
                        </p>
                    </div>
                </div>

                <div class="card">
                    <div class="card-body">
                        <h3>Total Discount</h3>
                        <p class="card-value">
                            <%= overallDiscount %>
                        </p>
                    </div>
                </div>
            </div>
        </div>


        <h3 style="margin: auto;">Payment Methods Distribution</h3>
        <canvas id="paymentChart"></canvas>

        <div>
            <label for="reportRange">Select Range:</label>
            <select id="reportRange">
                <option value="daily">Daily</option>
                <option value="weekly">Weekly</option>
                <option value="monthly">Monthly</option>
                <option value="yearly">Yearly</option>
                <option value="custom">Custom</option>
            </select>
            <input type="date" id="startDate" style="display: none;">
            <input type="date" id="endDate" style="display: none;">
            <button id="fetchChartData">Generate Chart</button>
        </div>

        <canvas id="myChart" width="400" height="200"></canvas>

        





        <!-- <%-include('footer') %> -->
</body>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>










    document.getElementById('fetchChartData').addEventListener('click', async () => {
    const reportRange = document.getElementById('reportRange').value;
    const startDate = document.getElementById('startDate').value;
    const endDate = document.getElementById('endDate').value;

    const requestBody = { reportRange };
    if (reportRange === 'custom') {
        // Include startDate and endDate only for custom range
        requestBody.startDate = startDate;
        requestBody.endDate = endDate;
    }
try{
    const response = await fetch('/admin/salesChart', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify( requestBody)
    });

    if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }

        const chartData = await response.json();
        console.log(chartData); // Log the received chart data
        renderChart(chartData); // Call a function to render the chart
    } catch (error) {
        console.error('Error in chart data fetch:', error);
    }
});


// function renderChart(data) {
//     const ctx = document.getElementById('salesChart').getContext('2d');
//     new Chart(ctx, {
//         type: 'bar',
//         data: {
//             labels: data.labels,
//             datasets: data.datasets
//         },
//         options: { responsive: true, scales: { y: { beginAtZero: true } } }
//     });
// }

function renderChart(data) {

    let myChart;

    const ctx = document.getElementById('myChart').getContext('2d');

    if (myChart) {
        myChart.destroy();
    }

    myChart = new Chart(ctx, {
        type: 'bar', 
        data: {
            labels: data.labels,
            datasets: [{
                label: 'Sales',
                data: data.sales, 
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
}

</script>